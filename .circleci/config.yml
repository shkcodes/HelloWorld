version: 2
jobs:
  build:
    -run: yes | sdkmanager --licenses |
      python -m virtualenv venv
      . venv/bin/activate
    working_directory: ~/code
    docker:
    - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
    - checkout
    - run:
        name: Install requests
        command: sudo pip install requests
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    #      - run:
    #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
    #         command: sudo chmod +x ./gradlew
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Build
        command: ./gradlew clean assembleDebug --stacktrace
    - run:
        name: Fetch last release
        command: python fetch_last_release.py
    - run:
        name: Diff apks
        command: apkanalyzer -h apk compare old.apk app/build/outputs/apk/debug/app-debug.apk > apkDiff.txt
    - store_artifacts:
        path: app/build/outputs/apk/
        destination: apks/
    - run:
        name: Test Script
        command: |
            # My example bash script
            echo "Hello World"
            get_latest_release() {
              curl --silent "https://api.github.com/repos/$1/releases/latest" | # Get latest release from GitHub api
                grep '"assets_url":' |                                            # Get tag line
                sed -E 's/.*"([^"]+)".*/\1/'                                    # Pluck JSON value
            }
            # Usage
            get_latest_release "shkcodes/HelloWorld"
    - persist_to_workspace:
        # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
        # taken to be the root directory of the workspace.
        root: /home/circleci/code/app/build/outputs/apk
        # Must be relative path from root
        paths:
        - debug/*
  publish-github-release:
    working_directory: ~/code
    docker:
    - image: cibuilds/github:0.10
    steps:
    - attach_workspace:
        at: ./artifacts
    - run:
        name: "Publish Release on GitHub"
        command: ghr -t ${GITHUB_API_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} v0.1.0 artifacts/debug
workflows:
  version: 2
  build_and_deploy:
    jobs:
    - build
    - publish-github-release:
        requires:
          - build
